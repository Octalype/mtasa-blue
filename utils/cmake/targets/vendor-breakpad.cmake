#
# Google Breakpad library target
#
if (NOT MTASA_OS_LINUX)
    return()
endif()

set(VENDOR_BREAKPAD_DIR "${MTASA_VENDOR_DIR}/google-breakpad")

add_library(vendor-breakpad STATIC
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/common/breakpad_types.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/common/minidump_format.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/common/minidump_size.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/basic_source_line_resolver.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/call_stack.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/code_module.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/code_modules.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/dump_context.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/dump_object.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/exploitability.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/fast_source_line_resolver.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/memory_region.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/microdump.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/microdump_processor.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/minidump.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/minidump_processor.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/process_result.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/process_state.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/proc_maps_linux.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/source_line_resolver_base.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/source_line_resolver_interface.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/stack_frame.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/stack_frame_cpu.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/stack_frame_symbolizer.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/stackwalker.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/symbol_supplier.h"
    "${VENDOR_BREAKPAD_DIR}/src/google_breakpad/processor/system_info.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/address_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/address_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/basic_code_module.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/basic_code_modules.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/basic_code_modules.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/basic_source_line_resolver_types.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/basic_source_line_resolver.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/call_stack.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/cfi_frame_info.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/cfi_frame_info.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/contained_range_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/contained_range_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/disassembler_x86.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/disassembler_x86.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/dump_context.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/dump_object.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/exploitability.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/exploitability_linux.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/exploitability_linux.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/exploitability_win.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/exploitability_win.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/fast_source_line_resolver_types.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/fast_source_line_resolver.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/linked_ptr.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/logging.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/logging.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/map_serializers-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/map_serializers.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/microdump.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/microdump_processor.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/minidump.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/minidump_processor.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/module_comparer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/module_comparer.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/module_factory.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/module_serializer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/module_serializer.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/pathname_stripper.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/pathname_stripper.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/postfix_evaluator-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/postfix_evaluator.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/process_state.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/proc_maps_linux.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/range_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/range_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/simple_serializer-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/simple_serializer.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/simple_symbol_supplier.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/simple_symbol_supplier.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/windows_frame_info.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/source_line_resolver_base_types.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/source_line_resolver_base.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stack_frame_cpu.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stack_frame_symbolizer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_amd64.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_amd64.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_arm.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_arm.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_arm64.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_arm64.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_address_list.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_address_list.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_mips.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_mips.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_ppc.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_ppc.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_ppc64.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_ppc64.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_sparc.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_sparc.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_x86.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/stackwalker_x86.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_address_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_address_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_contained_range_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_contained_range_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_map_iterator-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_map_iterator.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_range_map-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/static_range_map.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/symbolic_constants_win.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/symbolic_constants_win.h"
    "${VENDOR_BREAKPAD_DIR}/src/processor/tokenize.cc"
    "${VENDOR_BREAKPAD_DIR}/src/processor/tokenize.h"
)

target_include_directories(vendor-breakpad PUBLIC "${VENDOR_BREAKPAD_DIR}/src")

add_library(vendor-breakpad-disasm STATIC
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_implicit.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_implicit.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_insn.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_insn.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_invariant.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_invariant.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_modrm.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_modrm.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_opcode_tables.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_opcode_tables.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_operand.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_operand.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_reg.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_reg.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_settings.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/ia32_settings.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/libdis.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/qword.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_disasm.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_format.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_imm.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_imm.h"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_insn.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_misc.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_operand_list.c"
    "${VENDOR_BREAKPAD_DIR}/src/third_party/libdisasm/x86_operand_list.h"
)

target_include_directories(vendor-breakpad-disasm PUBLIC "${VENDOR_BREAKPAD_DIR}/src")

add_library(vendor-breakpad-client STATIC
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/crash_generation/crash_generation_client.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/crash_generation/crash_generation_server.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/dump_writer_common/thread_info.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/dump_writer_common/ucontext_reader.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/handler/exception_handler.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/handler/exception_handler.h"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/handler/minidump_descriptor.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/handler/minidump_descriptor.h"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/log/log.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/log/log.h"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/microdump_writer/microdump_writer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/microdump_writer/microdump_writer.h"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/minidump_writer/linux_core_dumper.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/minidump_writer/linux_dumper.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/minidump_writer/linux_ptrace_dumper.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/linux/minidump_writer/minidump_writer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/minidump_file_writer-inl.h"
    "${VENDOR_BREAKPAD_DIR}/src/client/minidump_file_writer.cc"
    "${VENDOR_BREAKPAD_DIR}/src/client/minidump_file_writer.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/convert_UTF.c"
    "${VENDOR_BREAKPAD_DIR}/src/common/convert_UTF.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/md5.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/md5.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/string_conversion.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/string_conversion.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/elf_core_dump.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/elfutils.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/elfutils.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/file_id.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/file_id.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/guid_creator.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/guid_creator.h"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/linux_libc_support.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/memory_mapped_file.cc"
    "${VENDOR_BREAKPAD_DIR}/src/common/linux/safe_readlink.cc"

    $<$<BOOL:MTASA_OS_ANDROID>:
        "${VENDOR_BREAKPAD_DIR}/src/common/android/breakpad_getcontext.S"
    >
)

target_include_directories(vendor-breakpad-client PUBLIC "${VENDOR_BREAKPAD_DIR}/src")
